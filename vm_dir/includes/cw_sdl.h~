/* ************************************************************************** */
/*                                                          LE - /            */
/*                                                              /             */
/*   cw_sdl.h                                         .::    .:/ .      .::   */
/*                                                 +:+:+   +:    +:  +:+:+    */
/*   By: rcepre <rcepre@student.le-101.fr>          +:+   +:    +:    +:+     */
/*                                                 #+#   #+    #+    #+#      */
/*   Created: 2019/05/06 18:14:08 by rgermain     #+#   ##    ##    #+#       */
/*   Updated: 2019/06/01 15:18:08 by rcepre      ###    #+. /#+    ###.fr     */
/*                                                         /                  */
/*                                                        /                   */
/* ************************************************************************** */

#ifndef CW_SDL_H
# define CW_SDL_H
# include "corewar.h"
// # include "/Users/rcepre/.brew/include/SDL2/SDL.h"
// # include "/Users/rcepre/.brew/include/SDL2/SDL_ttf.h"
# include "SDL2/SDL.h"
# include "SDL2/SDL_ttf.h"
# include "SDL2/SDL_mixer.h"


#define RGB_PLAY_1 0x74d3ae
#define RGB_PLAY_2 0xa6c48a
#define RGB_PLAY_3 0x8b85c1
#define RGB_PLAY_4 0xaf5d63
#define RGB_BCK 0x1e1e1e
#define RGB_INFO_TXT 0xAAEEAA
#define RGB_INFO 0x80AA80
# define IMG_NB 1
# define IMG_COMMODORE_SCREEN "../img/purple_monitor.bmp"
# define RESIZE 8

typedef struct  s_bytetab
{
    SDL_Rect    coord;
}               t_bytetab;


enum
{
    CYCLES,
    PROCESS,
    SPEED,
    MS,
    PLAYERS
};

enum
{
    PL1,
    PL2,
    PL3,
    PL4
};

typedef struct  s_visu
{
    int             win_w;
    int             win_h;
    SDL_Window      *win;
    SDL_Renderer    *ren;
    SDL_Event       event;
    SDL_Texture     *images[IMG_NB];
    SDL_Rect        arena;
    SDL_Rect        info;
    SDL_Rect        info_gl[5];
    SDL_Rect        info_players[4];
    t_bytetab       bytetab[MEM_SIZE];
    int             t1;
    int             t2;
    int             freq;
    TTF_Font        *font;
    char            pause;
}                   t_visu;





// void test_rect(t_visu *visu, int nb, SDL_Rect frame, t_core *cw);

#endif
